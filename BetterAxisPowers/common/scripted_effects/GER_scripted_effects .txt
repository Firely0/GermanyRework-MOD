
give_SOV_armor_research_bonuses = { #this effect is run for the Soviets!
if = {
	limit = {
		NOT = {
			has_dlc = "No Step Back"
		}
	}
	add_tech_bonus = {
		name = med_armor_bonus
		ahead_reduction = 2
		category = cat_medium_armor
	}
	add_tech_bonus = {
		name = armor_bonus
		bonus = 1.0
		uses = 1
		category = armor
	}
}
if = { #double if because history files don't like else and this effect is run in the Soviet history file
	limit = {
		has_dlc = "No Step Back"
	}
	create_equipment_variant = {
		name = "A-20"
		type = medium_tank_chassis_1
		parent_version = 0
		modules = {
			main_armament_slot = tank_small_cannon_2
			turret_type_slot = tank_medium_two_man_tank_turret
			suspension_type_slot = tank_christie_suspension
			armor_type_slot = tank_welded_armor
			engine_type_slot = tank_diesel_engine
			special_type_slot_1 = sloped_armor
		}
		upgrades = {
			tank_nsb_engine_upgrade = 8
			tank_nsb_armor_upgrade = 2
		}
		icon = "GFX_SOV_basic_medium_tank_medium"
	}
	create_equipment_variant = {
		name = "KV-1"
		type = heavy_tank_chassis_1
		parent_version = 0
		modules = {
			main_armament_slot = tank_medium_cannon
			turret_type_slot = tank_heavy_three_man_tank_turret
			suspension_type_slot = tank_torsion_bar_suspension
			armor_type_slot = tank_welded_armor
			engine_type_slot = tank_diesel_engine		
		}
		upgrades = {
			tank_nsb_engine_upgrade = 10
			tank_nsb_armor_upgrade = 9
		}
		icon = "GFX_SOV_improved_heavy_tank_medium"
	}
	add_tech_bonus = {
		name = armor_bonus
		bonus = 1.0
		uses = 2
		category = armor
	}
}
}

MR_pact_transfer_state_effect = {
if = {
	limit = {
		96 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 96
					is_subject_of = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				any_other_country = {
					is_in_faction_with = SOU
					has_country_flag = BLT_soviets_said_yes_to_belarus_flag
				}
			}
		}
		SOU = { transfer_state = 96 }
	}
	else = {
		random_other_country = {
			limit = {
				is_in_faction_with = SOU
				OR = {
					has_cosmetic_tag = LIT_belarus
					has_cosmetic_tag = LAT_belarus
					has_cosmetic_tag = EST_belarus
					has_cosmetic_tag = BAL_UNIFIED
				}
			}
			transfer_state = 96
		}
	}
}
if = {
	limit = {
		95 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 95
					is_subject_of = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				any_other_country = {
					is_in_faction_with = SOU
					has_country_flag = BLT_soviets_said_yes_to_belarus_flag
				}
			}
		}
		SOU = { transfer_state = 95 }
	}
	else = {
		random_other_country = {
			limit = {
				is_in_faction_with = SOU
				OR = {
					has_cosmetic_tag = LIT_belarus
					has_cosmetic_tag = LAT_belarus
					has_cosmetic_tag = EST_belarus
					has_cosmetic_tag = BAL_UNIFIED
				}
			}
			transfer_state = 95
		}
	}
}
if = {
	limit = {
		94 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 94
					is_subject_of = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				any_other_country = {
					is_in_faction_with = SOU
					has_country_flag = BLT_soviets_said_yes_to_belarus_flag
				}
			}
		}
		SOU = { transfer_state = 94 }
	}
	else = {
		random_other_country = {
			limit = {
				is_in_faction_with = SOU
				OR = {
					has_cosmetic_tag = LIT_belarus
					has_cosmetic_tag = LAT_belarus
					has_cosmetic_tag = EST_belarus
					has_cosmetic_tag = BAL_UNIFIED
				}
			}
			transfer_state = 94
		}
	}
}
if = {
	limit = {
		93 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 93
					is_subject_of = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 93 }
}
if = {
	limit = {
		91 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 91
					is_subject_of = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 91 }
}
if = {
	limit = {
		97 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 97
					is_subject_of = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				any_other_country = {
					is_in_faction_with = SOU
					has_country_flag = BLT_soviets_said_yes_to_belarus_flag
				}
			}
		}
		SOU = { transfer_state = 97 }
	}
	else = {
		random_other_country = {
			limit = {
				is_in_faction_with = SOU
				OR = {
					has_cosmetic_tag = LIT_belarus
					has_cosmetic_tag = LAT_belarus
					has_cosmetic_tag = EST_belarus
					has_cosmetic_tag = BAL_UNIFIED
				}
			}
			transfer_state = 97
			97 = {
				add_core_of = PREV
			}
		}
	}
}
if = {
	limit = {
		89 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 89
					is_subject_of = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 89 }
}
if = {
	limit = {
		784 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 784
					is_subject_of = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_global_flag = LIT_gets_vilnius
				LIT = { controls_state = 784 }
				LIT = { is_in_faction_with = SOU }
			}
			LIT = { exists = yes }
		}
		LIT = { transfer_state = 784 }
	}
	else_if = {
		limit = {
			NOT = {
				any_other_country = {
					is_in_faction_with = SOU
					has_country_flag = BLT_soviets_said_yes_to_belarus_flag
				}
			}
		}
		SOU = { transfer_state = 784 }
	}
	else = {
		random_other_country = {
			limit = {
				is_in_faction_with = SOU
				OR = {
					has_cosmetic_tag = LIT_belarus
					has_cosmetic_tag = LAT_belarus
					has_cosmetic_tag = EST_belarus
					has_cosmetic_tag = BAL_UNIFIED
				}
			}
			transfer_state = 784
		}
	}
}
}

MR_pact_transfer_faction_state_effect = {
if = {
	limit = {
		96 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 96
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 96 }
}
if = {
	limit = {
		95 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 95
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 95 }
}
if = {
	limit = {
		94 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 94
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 94 }
}
if = {
	limit = {
		93 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 93
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 93 }
}
if = {
	limit = {
		91 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 91
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 91 }
}
if = {
	limit = {
		97 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 97
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 97 }
}
if = {
	limit = {
		89 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = {
					controls_state = 89
					is_in_faction_with = ROOT
				}
			}
		}
	}
	SOU = { transfer_state = 89 }
}
if = {
	limit = {
		784 = {
			OR = {
				is_controlled_by = ROOT
				any_other_country = { 
					controls_state = 784
					is_in_faction_with = ROOT
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_global_flag = LIT_gets_vilnius
				LIT = { controls_state = 784 }
			}
			LIT = { exists = yes }
		}
		LIT = { transfer_state = 784 }
	}
	else = {
		SOU = { transfer_state = 784 }
	}
}
}

GER_bop_increase_lost_core_modifier = {
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_4
		}
	}
	add_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_5
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_3
		}
	}
	add_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_4
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_2
		}
	}
	add_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_3
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_1
		}
	}
	add_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_2
	}
}
else_if = {
	limit = {
		NOT = {
			has_power_balance_modifier = {
				id = GER_power_balance
				modifier = GER_power_balance_lost_core_5
			}
		}
	}
	add_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_1
	}
}
}

GER_bop_decrease_lost_core_modifier = {
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_5
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_5
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_4
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_4
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_3
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_3
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_2
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_2
	}
}
else_if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_1
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_1
	}
}
else = {
	#NOTHING cannot decrease
}
}

GER_bop_remove_lost_core_modifier = {
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_5
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_5
	}
}
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_4
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_4
	}
}
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_3
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_3
	}
}
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_2
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_2
	}
}
if = {
	limit = {
		has_power_balance_modifier = {
			id = GER_power_balance
			modifier = GER_power_balance_lost_core_1
		}
	}
	remove_power_balance_modifier = {
		id = GER_power_balance
		modifier = GER_power_balance_lost_core_1
	}
}
}

GER_upgrade_wehrmacht_effect = {	
	hidden_effect = {
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_dynamic_modifier
				}
				has_completed_focus = GER_tank_warfare
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_Tank_dynamic_modifier }
			swap_ideas = {
				remove_idea = Wehrmacht_Main_inf
				add_idea = Wehrmacht_Main_Tank
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_Tank_dynamic_modifier
				}
				has_completed_focus = GER_tank_warfare
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_Tank_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_Tank_1_dynamic_modifier }
			swap_ideas = {
				remove_idea = Wehrmacht_Main_Tank
				add_idea = Wehrmacht_Main_Tank_1
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_Tank_1_dynamic_modifier
				}
				has_completed_focus = GER_tank_warfare
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_Tank_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_Tank_2_dynamic_modifier }
			swap_ideas = {
				remove_idea = Wehrmacht_Main_Tank_1
				add_idea = Wehrmacht_Main_Tank_2
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_dynamic_modifier
				}
				has_completed_focus = GER_Battle_Plan
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_INF_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_INF_dynamic_modifier
				}
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_INF_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_INF_1_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_INF_1_dynamic_modifier
				}
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_INF_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_INF_2_dynamic_modifier }
			swap_ideas = {
				remove_idea = Wehrmacht_Main_inf
				add_idea = Wehrmacht_Main_inf_1
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_INF_2_dynamic_modifier
				}
				has_completed_focus = GER_Cheap_EQ
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_INF_2_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_INF_3_dynamic_modifier }
			swap_ideas = {
				remove_idea = Wehrmacht_Main_inf_1
				add_idea = WehrmachtWarPlana_h
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = Wehrmacht_INF_3_dynamic_modifier
				}
				has_completed_focus = GER_Cheap_SUP
			}
			remove_dynamic_modifier = { modifier = Wehrmacht_INF_3_dynamic_modifier }
			add_dynamic_modifier = { modifier = Wehrmacht_INF_4_dynamic_modifier }
			swap_ideas = {
				remove_idea = WehrmachtWarPlana_h
				add_idea = WehrmachtWarPlanb_h
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = SS_forces_dynamic_modifier
				}
			}
			remove_dynamic_modifier = { modifier = SS_forces_dynamic_modifier }
			add_dynamic_modifier = { modifier = SS_forces_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = {
					modifier = SS_forces_dynamic_modifier
				}
				has_completed_focus = GER_SS_Search_and_Destroy
			}
			remove_dynamic_modifier = { modifier = SS_forces_dynamic_modifier }
			add_dynamic_modifier = { modifier = SS_forces_1_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_SD_B_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_SD_B_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_B_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_CAS_A_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_CAS_A_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_CAS_A_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_OI_A_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_OI_A_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_OI_A_dynamic_modifier }
		}
		# Navy
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
		}
	}
}

GER_upgrade_luftwaffe_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
				has_completed_focus = GER_Strategic_Des
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
			swap_ideas = {
				remove_idea = Luftwaffe_debuff
				add_idea = Luftwaffe_SD
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_SD_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_SD_A_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_SD_B_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
				has_completed_focus = GER_CAS
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
			swap_ideas = {
				remove_idea = Luftwaffe_debuff
				add_idea = Luftwaffe_CAS
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_CAS_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_CAS_A_dynamic_modifier }
			swap_ideas = {
				remove_idea = Luftwaffe_CAS
				add_idea = Luftwaffe_CAS_R
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
				has_completed_focus = GER_Operational_Integratiy
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
			swap_ideas = {
				remove_idea = Luftwaffe_debuff
				add_idea = Luftwaffe_OI
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Luftwaffe_OI_dynamic_modifier }
			add_dynamic_modifier = { modifier = Luftwaffe_OI_A_dynamic_modifier }
			swap_ideas = {
				remove_idea = Luftwaffe_OI
				add_idea = Luftwaffe_OI_IMP
			}
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
		}
	}
}

GER_upgrade_kriegsmarine_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
				has_completed_focus = GER_carrier_war
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
				has_completed_focus = GER_rebuild_the_high_seas_fleet_a
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Gloryofmodernger_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = Kriegsmarine_Carrier_dynamic_modifier }
			add_dynamic_modifier = { modifier = Kriegsmarine_CarrierGloryofmodernger_dynamic_modifier }
		}
	}
}

GER_upgrade_kriegsmarine_idea_effect = {
		if = {
			limit = {
				has_idea = Kriegsmarine_Debuff_Version
				has_completed_focus = GER_rebuild_the_high_seas_fleet_a
			}
			swap_ideas = {
				remove_idea = Kriegsmarine_Debuff_Version
				add_idea = Kriegsmarine_buff_Version_No_Carrier
			}
		}
		if = {
			limit = {
				has_idea = Kriegsmarine_Debuff_Version
				has_completed_focus = GER_carrier_war
			}
			swap_ideas = {
				remove_idea = Kriegsmarine_Debuff_Version
				add_idea = Kriegsmarine_Debuff_Version_Carrier
			}
		}
		if = {
			limit = {
				has_idea = Kriegsmarine_buff_Version_No_Carrier
				has_completed_focus = GER_carrier_war
			}
			swap_ideas = {
				remove_idea = Kriegsmarine_buff_Version_No_Carrier
				add_idea = Kriegsmarine_Debuff_Version_Last_Version
			}
		}
		if = {
			limit = {
				has_idea = Kriegsmarine_Debuff_Version_Carrier
				has_completed_focus = GER_rebuild_the_high_seas_fleet_a
			}
			swap_ideas = {
				remove_idea = Kriegsmarine_Debuff_Version_Carrier
				add_idea = Kriegsmarine_Debuff_Version_Last_Version
			}
		}
}

GER_Lands_in_Soviet = {
	every_state = {
		limit = { 
			has_state_flag = GER_Claim_lands
			is_controlled_by_ROOT_or_ally = yes
		}
		transfer_state_to = GER
	}
}

JAP_Lands_in_Soviet = {
	if = {
		limit = {
			408 = { is_owned_by = SOV }
			409 = { is_owned_by = SOV }
			655 = { is_owned_by = SOV }
		}
		JAP = {
			transfer_state = 408
			transfer_state = 409
			transfer_state = 655
			add_state_core = 655
		}
		JAP = {
			add_opinion_modifier = {
				target = GER
				modifier = GER_Fate_of_SOV
			}
		}
	}
}

ROM_Lands_in_Soviet = {
	if = {
		limit = {
			80 = { is_owned_by = SOV }
			78 = { is_owned_by = SOV }
			766 = { is_owned_by = SOV }
		}
		ROM = {
			transfer_state = 80
			transfer_state = 78
			transfer_state = 766
		}
		ROM = {
			add_opinion_modifier = {
				target = GER
				modifier = GER_Fate_of_SOV
			}
		}
	}
}

FIN_Lands_in_Soviet = {
	if = {
		limit = {
			146 = { is_owned_by = SOV }
			147 = { is_owned_by = SOV }
			722 = { is_owned_by = SOV }
		}
		FIN = {
			transfer_state = 146
			transfer_state = 147
			transfer_state = 722
		}
		FIN = {
			add_opinion_modifier = {
				target = GER
				modifier = GER_Fate_of_SOV
			}
		}
	}
}

TUR_Lands_in_Soviet = {
	if = {
		limit = {
			231 = { is_owned_by = SOV }
			229 = { is_owned_by = SOV }
			230 = { is_owned_by = SOV }
		}
		TUR = {
			transfer_state = 231
			transfer_state = 229
			transfer_state = 230
			add_state_core = 229
		}
		TUR = {
			add_opinion_modifier = {
				target = GER
				modifier = GER_Fate_of_SOV
			}
		}
	}
}

GER_isolate_effect = {
	GER = {
		every_neighbor_country = {
			limit = {
				NOT = { 
					tag = GER 
					tag = FRA 
				}
				AND = {
					bordering_country = GER
				}
			}
			country_event = { id = GER_rhineland_isolete.1 }
		}
	}
}

GER_Vichy_state_modifier = {
	every_state = {
		limit = {
			OR = {
				state = 18
				state = 29
				state = 785
				state = 16
				state = 15
				state = 30
				state = 24
				state = 14
				state = 30
				state = 23
				state = 19
				state = 806
				state = 27
				state = 17
			}
		}
		add_dynamic_modifier = {
			modifier = Ger_non_vichy_state_dynamic_modifier
			scope = GER
		}
	}
	set_global_flag = ITA_GER_VICHY_ESTABLISHED
}

GER_Vichy_state_modifier_remove = {
	every_state = {
		limit = {
			OR = {
				state = 18
				state = 29
				state = 785
				state = 16
				state = 15
				state = 30
				state = 24
				state = 14
				state = 30
				state = 23
				state = 19
				state = 806
				state = 27
				state = 17
			}
		}
		remove_dynamic_modifier = { modifier = Ger_non_vichy_state_dynamic_modifier }
	}
}

GER_SOV_white_peace_check = {
	if = {
		limit = {
			original_tag = SOV
			has_war_with = POL
			has_global_flag = GER_SOV_WHITE_PEACE_1
		}
		white_peace = POL
		clr_global_flag = GER_SOV_WHITE_PEACE_1
	}
}

GER_AUS_annex = {
	4 = {
		if = {
			limit = { is_owned_by = AUS }
			add_core_of = GER
		}
	}
	152 = {
		if = {
			limit = { is_owned_by = AUS }
			add_core_of = GER
		}
	}
	153 = {
		if = {
			limit = { is_owned_by = AUS }
			add_core_of = GER
		}
	}
	848 = {
		if = {
			limit = { is_owned_by = AUS }
			add_core_of = GER
		}
	}
	AUS = {
		every_unit_leader = {
			set_nationality = GER
		}
	}
	annex_country = { target = AUS transfer_troops = yes }
	add_political_power = 75
	set_country_flag = AUS_annexed
	add_war_support = 0.1
	add_stability = 0.05
}

GER_give_krupp_state = {
	if = {
		limit = {
			has_country_flag = GER_krupp_ph_2
			has_idea = free_trade
			NOT = { has_country_flag = GER_krupp_2_ended }
		}
		every_state = {
			limit = {
				OR = {
					State = 42
					state = 51
					state = 60
					state = 63
					state = 65
					state = 66
					state = 67
				} 
			}
			add_dynamic_modifier = {
				modifier = Krupp_PH2_FREETRADE_modifier
				scope = GER
				days = 365
			}
		}
		set_variable = { GER_KRUPP_PHASE_TIME = 730 }
		activate_mission = Krupp_End_of_Agreements
	}
	if = {
		limit = {
			has_country_flag = GER_krupp_ph_2
			NOT = { has_idea = free_trade }
			NOT = { has_country_flag = GER_krupp_2_ended }
		}
		every_state = {
			limit = {
				OR = {
					State = 42
					state = 51
					state = 60
					state = 63
					state = 65
					state = 66
					state = 67
				} 
			}
			add_dynamic_modifier = {
				modifier = Krupp_PH2_modifier
				scope = GER
				days = 730
			}
		}
		set_variable = { GER_KRUPP_PHASE_TIME = 730 }
		activate_mission = Krupp_End_of_Agreements
	}
	if = {
		limit = {
			has_country_flag = GER_krupp_2_ended
		}
		every_state = {
			limit = {
				OR = {
					State = 42
					state = 51
					state = 60
					state = 63
					state = 65
					state = 66
					state = 67
				} 
			}
			add_dynamic_modifier = {
				modifier = Krupp_PH3_modifier
				scope = GER
			}
		}
		set_country_flag = GER_krupp_final
	}
}

GER_krupp_next_ph = {
	if = {
		limit = {
			has_country_flag = GER_krupp_ph_starter
			NOT	= { has_country_flag = GER_krupp_ph_2 }
			NOT = { has_country_flag = GER_kupp_ph2_given }
		}
		clr_country_flag = GER_krupp_ph_starter
		set_country_flag = GER_kupp_ph2_given
		set_country_flag = GER_krupp_ph_2
	}
	if = {
		limit = {
			NOT = { has_country_flag = GER_krupp_ph_starter }
			NOT = { has_country_flag = GER_krupp_ph_2 }
			has_country_flag = GER_kupp_ph2_given 
		}
		set_country_flag = GER_krupp_2_ended
	}
}

GER_AI_EQ = {
	if = {
		limit = {
			is_ai = yes
		}
		add_equipment_to_stockpile = {
			type = infantry_equipment_2
			amount = 20000
			producer = GER
		}
		add_equipment_to_stockpile = {
			type = support_equipment
			amount = 3500
			producer = GER
		}
		add_equipment_to_stockpile = {
			type = artillery_equipment_2
			amount = 3500
			producer = GER
		}
		add_equipment_to_stockpile = {
			type = anti_air_equipment_2
			amount = 3500
			producer = GER
		}
		add_equipment_to_stockpile = {
			type = motorized_equipment
			amount = 4000
			producer = GER
		}
	}
}

GER_AI_EQ_1 = {
	if = {
		limit = {
			is_ai = yes
		}
		add_equipment_to_stockpile = {
			type = infantry_equipment
			amount = 10000
			producer = GER
		}
		add_equipment_to_stockpile = {
			type = support_equipment
			amount = 500
			producer = GER
		}
	}
}

GER_AI_DIV = {
	if = {
		limit = {
			is_ai = yes
		}
		division_template = {
			name = "Panzer Division"
			is_locked = no
			priority = 0
			regiments = {
				medium_armor = { x = 0 y = 0 }
				medium_armor = { x = 0 y = 1 }
				medium_armor= { x = 0 y = 2 }
				medium_armor = { x = 0 y = 3 }
				medium_armor = { x = 0 y = 4 }
				medium_armor = { x = 1 y = 0 }
				medium_armor = { x = 1 y = 1 }
				medium_armor= { x = 1 y = 2 }
				medium_armor = { x = 1 y = 3 }
				medium_armor = { x = 1 y = 4 }
				medium_armor = { x = 2 y = 0 }
				medium_armor = { x = 2 y = 1 }
				medium_armor= { x = 2 y = 2 }
				medium_armor = { x = 2 y = 3 }
				medium_tank_destroyer_brigade = { x = 2 y = 4 }
				mechanized = { x = 3 y = 0 }
				mechanized = { x = 3 y = 1 }
				mechanized= { x = 3 y = 2 }
				mechanized = { x = 3 y = 3 }
				mechanized = { x = 3 y = 4 }
				medium_armor = { x = 4 y = 0 }
				medium_armor = { x = 4 y = 1 }
			}
			support = {
				medium_flame_tank = { x = 0 y = 0 }
				armored_car_recon = { x = 0 y = 1 }
				logistics_company = { x = 0 y = 2 }
				signal_company = { x = 0 y = 3 }
				engineer = { x = 0 y = 4 }
			}
		}
		set_technology = { tech_engineers2 = 1 popup = no }
		set_technology = { tech_signal_company = 1 popup = no }
		set_technology = { mechanised_infantry = 1 popup = no }
		create_equipment_variant = {
			name = "Flammpanzer III Ausf. M"
			type = medium_tank_flame_chassis_2
			parent_version = 0
			allow_without_tech = yes
			modules = {
			main_armament_slot = flamethrower
			turret_type_slot = tank_medium_two_man_tank_turret
			suspension_type_slot = tank_torsion_bar_suspension
			armor_type_slot = tank_welded_armor
			engine_type_slot = tank_gasoline_engine
			}
			upgrades = {
				tank_nsb_engine_upgrade = 9
				tank_nsb_armor_upgrade = 11
			}
			icon = "GFX_GER_medium_BAB"
			model = "GER_medium_armor_0_entity"
		}
		create_railway_gun = {
			equipment = railway_gun_equipment_1
			name = TAG_new_railway_gun
			location = 6521
		}
		64 = {
			create_unit = {
				division = "name = \"Panzer Division\" division_template = \"Panzer Division\" start_experience_factor = 1.0"
				owner = GER
			}
			create_unit = {
				division = "name = \"Panzer Division 2\" division_template = \"Panzer Division\" start_experience_factor = 1.0"
				owner = GER
			}
		}
	}
}

GER_Give_fascism_effect = {
		load_focus_tree = {
			tree = german_fuhrer_better
			keep_completed = yes
		}
		uncomplete_national_focus = {
			focus = GER_against_fuhrer
			uncomplete_children = yes
			refund_political_power = no
		}
		unlock_national_focus = GER_rhineland_demilitarized
		complete_national_focus = GER_establish_abwehr
		complete_national_focus = GER_Fuhrer
		set_cosmetic_tag = GER_the_third_reich
		set_country_flag = COM_SIDE_FASCISM
		save_event_target_as = fascist_germany_civil_war
		every_unit_leader = {
			set_nationality = GER
		}
		set_variable = {
			GER_max_command_power = -20
		}
		set_variable = {
			GER_max_planning_factor = -0.2
		}
		set_variable = {
			GER_planning_speed = -0.1
		}
		set_variable = {
			GER_minimum_training_level = 0.1
		}
		set_variable = {
			GER_land_doctrine_cost_factor = 0.1
		}
		set_variable = {
			GER_air_mission_efficiency = -0.1
		}
		set_variable = {
			GER_air_accidents_factor = 0.1
		}
		set_variable = {
			GER_air_doctrine_cost_factor = 0.1
		}
		set_variable = {
			GER_navy_visibility = 0.1
		}
		set_variable = {
			GER_sub_retreat_speed = 0.05
		}
		set_variable = {
			GER_critical_receive_chance = 0.1
		}
		set_variable = {
			GER_naval_doctrine_cost_factor = 0.1
		}
		add_dynamic_modifier = {
			modifier = Wehrmacht_dynamic_modifier
		}
		add_dynamic_modifier = {
			modifier = Luftwaffe_dynamic_modifier
		}
		add_dynamic_modifier = {
			modifier = Kriegsmarine_dynamic_modifier
		}
	GER = {
		every_unit_leader = {
			limit = {
				OR = {
					has_id = 10
					has_id = 15
					has_id = 20
					has_id = 24
				}
			}
			set_nationality = event_target:fascist_germany_civil_war
		}
	}
}

GER_last_tiger_ace_effect = {
	division_template = {
		name = "SS Heavy Panzer Battalion"
		is_locked = yes
		priority = 0
		regiments = {
			heavy_armor = { x = 0 y = 0 }
			heavy_armor = { x = 0 y = 1 }
			heavy_armor = { x = 0 y = 2 }
			heavy_armor = { x = 0 y = 3 }
			heavy_armor = { x = 0 y = 4 }
			heavy_armor = { x = 1 y = 0 }
			heavy_armor = { x = 1 y = 1 }
			heavy_armor= { x = 1 y = 2 }
			heavy_armor = { x = 1 y = 3 }
			heavy_armor = { x = 1 y = 4 }
			heavy_armor = { x = 2 y = 0 }
			heavy_armor = { x = 2 y = 1 }
			heavy_armor= { x = 2 y = 2 }
			heavy_armor = { x = 2 y = 3 }
			heavy_armor = { x = 2 y = 4 }
			mechanized = { x = 3 y = 0 }
			mechanized = { x = 3 y = 1 }
			mechanized= { x = 3 y = 2 }
			mechanized = { x = 3 y = 3 }
			mechanized = { x = 3 y = 4 }
			heavy_armor = { x = 4 y = 0 }
			heavy_armor = { x = 4 y = 1 }
		}
		support = {
			armored_car_recon = { x = 0 y = 0 }
			logistics_company = { x = 0 y = 1 }
			signal_company = { x = 0 y = 2 }
			engineer = { x = 0 y = 3 }
		}
	}	
	64 = {
		create_unit = {
			division = "name = \"101st SS Heavy Panzer Division\" division_template = \"SS Heavy Panzer Battalion\" start_experience_factor = 1.0 start_equipment_factor = 1.0 start_manpower_factor = 1.0"
			owner = GER
		}
	}
	random_country_division = {
		limit = {
			OR = {
				division_has_battalion_in_template = heavy_armor
			}
			division_has_battalion_in_template = mechanized
			is_unit_template_reserves = no
			unit_strength > 0.5
		}
		add_history_entry = {
			key = "This unit has been recognised as an Elite panzer division."
			subject = "Division Honor"
			allow = yes
		}
		add_unit_medal_to_latest_entry = {
			unit_medals = knights_cross_oak_leaves
		}										
	}
}

GER_upgrade_france_comp = {
	if = {
		limit = {
			has_idea = renault_ger
		}
		swap_ideas = {
			remove_idea = renault_ger
			add_idea = renault_ger_a
		}
	}
	if = {
		limit = {
			has_idea = GER_AMX
		}
		swap_ideas = {
			remove_idea = GER_AMX
			add_idea = GER_AMX_a
		}
	}
	if = {
		limit = {
			has_idea = GER_APX
		}
		swap_ideas = {
			remove_idea = GER_APX
			add_idea = GER_APX_a
		}
	}
	if = {
		limit = {
			has_idea = GER_panhard
		}
		swap_ideas = {
			remove_idea = GER_panhard
			add_idea = GER_panhard_a
		}
	}
	if = {
		limit = {
			has_idea = GER_aeb
		}
		swap_ideas = {
			remove_idea = GER_aeb
			add_idea = GER_aeb_a
		}
	}
	if = {
		limit = {
			has_idea = GER_acl
		}
		swap_ideas = {
			remove_idea = GER_acl
			add_idea = GER_acl_a
		}
	}
	if = {
		limit = {
			has_idea = GER_acf
		}
		swap_ideas = {
			remove_idea = GER_acf
			add_idea = GER_acf_a
		}
	}
	if = {
		limit = {
			has_idea = GER_morane_saulnier
		}
		swap_ideas = {
			remove_idea = GER_morane_saulnier
			add_idea = GER_morane_saulnier_a
		}
	}
	if = {
		limit = {
			has_idea = GER_amiot
		}
		swap_ideas = {
			remove_idea = GER_amiot
			add_idea = GER_amiot_a
		}
	}
	if = {
		limit = {
			has_idea = GER_levasseur
		}
		swap_ideas = {
			remove_idea = GER_levasseur
			add_idea = GER_levasseur_a
		}
	}
}

rudolf_hess_africa_front_GER = {

	every_state = {
		limit = {
			OR = {
				state = 777
				state = 773
				state = 774
				state = 660
				state = 539
				state = 772
				state = 295
				state = 538
				state = 718
				state = 885
				state = 548
				state = 890
				state = 768
				state = 769
				state = 564
				state = 770
				state = 771
				state = 889
				state = 888
				state = 545
				state = 542
				state = 546
			}
		}
		set_state_flag = GER_Africa_states
	}

	every_state = {
		limit = { 
			has_state_flag = GER_Africa_states
		}
		transfer_state_to = GER
	}
}

rudolf_hess_africa_front_ITA = {

	every_state = {
		limit = {
			OR = {
				state = 905
				state = 457
				state = 904
				state = 903
				state = 844
				state = 559
				state = 269
				state = 268
				state = 550
				state = 884
				state = 886
				state = 883
				state = 887
				state = 549
				state = 551
				state = 456
				state = 457
				state = 907
				state = 447
				state = 907
				state = 447
				state = 453
				state = 454
				state = 455
				state = 553
				state = 554
				state = 782
				state = 677
				state = 680
				state = 452
				state = 552
				state = 273
				state = 514
				state = 786
				state = 515
				state = 775
				state = 767
				state = 547
				state = 462
				state = 461
				state = 513
				state = 459
				state = 458
				state = 665
				state = 460
			}
		}
		set_state_flag = ITA_Africa_states
	}

	every_state = {
		limit = { 
			has_state_flag = ITA_Africa_states
		}
		transfer_state_to = ITA
	}
	
}

rudolf_hess_africa_front_International_Zone = {
	ENG = {
		446 = { transfer_state_to = GER }
	}
	ROOT = {
		release_on_controlled = EGY
	}
	every_country = {
		limit = {
			NOT = { tag = EGY } is_major = yes
		}
		give_guarantee = EGY
		add_ai_strategy = {
			type = protect
			id = "EGY"
			value = 50
		}
	}
}

rudolf_hess_italy_annex_eth_w_puppets = {
	ITA = {
		annex_country = {
			target = ETH
			transfer_troops = no
		}
	}
	any_other_country = {
		limit = {
			is_puppet_of = ETH
		}
		annex_country = {
			target = PREV
			transfer_troops = no
		}
	}
}

rudolf_hess_GER_states = {
	every_state = {
		limit = {
			OR = {
				state = 28
			}
		}
		transfer_state_to = GER
	}
}

rudolf_hess_GER_POL_states = {
	GER = {
		release_on_controlled = POL
		puppet = POL
	}
	every_state = {
		limit = {
			OR = {
				state = 86
				state = 807
				state = 85
			}
		}
		transfer_state_to = GER
	}
}

rudolf_hess_GER_YUG_states = {
	every_state = {
		limit = {
			OR = {
				state = 102
				state = 853
				state = 109
			}
		}
		transfer_state_to = GER
		GER =  {
			release_on_controlled = CRO
			add_to_faction = CRO
		}
	}
	every_state = { # Can fix some problems i hope
	limit = {
		OR = {
			state = 103
			state = 163
			state = 852
		}
	}
	transfer_state_to = ITA
    }
}

rudolf_hess_ITA_YUG_states = {
	every_state = {
		limit = {
			OR = {
				state = 103
				state = 105
				state = 804
			}
		}
		transfer_state_to = ITA
	}
}

rudolf_hess_ITA_YUG_1_states = {
	every_state = {
		limit = {
			OR = {
				state = 103
				state = 804
			}
		}
		transfer_state_to = ITA
	}
}

rudolf_hess_ITA_ALB_YUG_states = {
	every_state = {
		limit = {
			OR = {
				state = 802
			}
		}
		transfer_state_to = ALB
	}
}

rudolf_hess_HUN_YUG_states = {
	every_state = {
		limit = {
			OR = {
				state = 45
				state = 764
			}
		}
		transfer_state_to = HUN
	}
}

rudolf_hess_BUL_YUG_states = {
	every_state = {
		limit = {
			OR = {
				state = 106
				state = 803
			}
		}
		transfer_state_to = BUL
	}
}

rudolf_hess_BUL_GRE_states = {
	every_state = {
		limit = {
			OR = {
				state = 731
				state = 184
			}
		}
		transfer_state_to = BUL
	}
}

rudolf_hess_ITA_GRE_states = {
	every_state = {
		limit = {
			OR = {
				state = 185
				state = 186
				state = 47
				state = 182
				state = 187
			}
		}
		transfer_state_to = ITA
	}
}

rudolf_hess_ITA_GRE_1_states = {
	ITA = {
		annex_country = {
			target = GRE
			transfer_troops = no
		}
	}
}

rudolf_hess_ITA_YUG_PUPPET_states = {
	YUG = {
		remove_ideas = anti_german_military
	}
	ITA = {
		puppet = YUG
	}
}

GER_spawn_penal_divisions_effect = {
	hidden_effect = {
		capital_scope = {
			create_unit = {
				division = "division_template = \"Strafbataillon\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		set_country_flag = GER_penal_units_raised_flag
	}
}